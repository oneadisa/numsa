---
import type { ImageMetadata } from 'astro';
import { Icon } from 'astro-icon/components';
import Image from '../../components/common/Image.astro';
// import PostTags from '../../components/blog/Tags.astro';

// import { APP_BLOG } from '../../utils/config';
// import type { Post } from '../../types';

// import { getPermalink } from '../../utils/permalinks';
import { findImage } from '../../utils/images';
// import { getFormattedDate } from '../../utils/utils';

export interface Post {
  id: string,
    collection: string,
    data: {
      name: string,
      serial: number,
      position: string,
      level: number,
      image: string,
      bio?: string
    }
}

export interface Props {
  excos: string;
  post: Post;
}

const { post, excos } = Astro.props;
const image = (await findImage(post.data.image)) as ImageMetadata | undefined;

let link
// const link = APP_BLOG?.post?.isEnabled ? getPermalink(post.permalink, 'post') : '';
// excos ? link = `/2024/excos/${post.id}` : link = `/2024/house/${post.id}`

switch (excos) {
  case 'excos':
    link = `/2024/excos/${post.id}`;
    break;
  case 'house':
    link = `/2024/house/${post.id}`;
    break;
  case 'jc':
    link = `/2024/jc/${post.id}`;
    break;
}
---

<article class={`max-w-md mx-auto md:max-w-none grid gap-6 md:gap-8 ${image ? 'md:grid-cols-2' : ''}`}>
  {
    image && (
      <a class="relative block group" href={link ?? 'javascript:void(0)'}>
        <div class="relative  pb-[120%] md:pb-[120%] lg:pb-[120%] overflow-hidden bg-gray-400 dark:bg-slate-700 rounded shadow-lg">
          {image && (
            <Image
              src={image}
              class="absolute inset-0 object-cover w-full h-full mb-6 rounded shadow-lg bg-gray-400 dark:bg-slate-700"
              width={1200}
              alt={post.id}
              aspectRatio="16:9"
              loading="eager"
              decoding="async"
            />
          )}
        </div>
      </a>
    )
  }
  <div class="text-center content-center">
    <header>
      <h2 class="text-xl sm:text-2xl font-bold leading-tight mb-2 font-heading dark:text-slate-300">
        {
          link ? (
            <a class="hover:text-primary dark:hover:text-blue-700 transition ease-in duration-200" href={link}>
              {post.data.position}
            </a>
          ) : (
            post.data.position
          )
        }
      </h2>
      <div class="mb-1">
        <span class="text-base">
          <Icon name="tabler:clock" class="w-3.5 h-3.5 inline-block -mt-0.5 dark:text-gray-400" />
          <time datetime={String(post.data.level)} class="inline-block">{post.data.level}</time>
          {
            post.data.name && (
              <>
                {' '}
                ·{' '}
                <Icon name="tabler:user" class="w-3.5 h-3.5 inline-block -mt-0.5 dark:text-gray-400" />
                <span>{post.data.name}</span>
              </>
            )
          }
          <!-- {
            post.data.level && (
              <>
                {' '}
                ·{' '}
                <a class="capitalize hover:underline" href={link}>
                  {post.data.level}
                </a>
              </>
            )
          } -->
          
        </span>
      </div>
      
    </header>

    <!-- {post.excerpt && <p class="flex-grow text-muted dark:text-slate-400 text-lg">{post.excerpt}</p>} -->
  </div>
</article>
