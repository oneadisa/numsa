---
import type { InferGetStaticPropsType, GetStaticPaths } from 'astro';

import merge from 'lodash.merge';
import type { ImageMetadata } from 'astro';
import Layout from '../../../layouts/PageLayout.astro';
import ContentDetail from '../../../components/numsa/ContentDetail.astro';
import { I18N } from '../../../utils/config';
// import ToBlogLink from '../../../components/blog/ToBlogLink.astro';

import { getBlogPermalink, getCanonical, getPermalink } from '../../../utils/permalinks';
import { blogPostRobots } from '../../../utils/blog';
import { findImage } from '../../../utils/images';
import type { MetaData } from '../../../types';
// import RelatedPosts from '../../../components/blog/RelatedPosts.astro';
import Button from '../../../components/ui/Button.astro';
import { Icon } from 'astro-icon/components';
import { getCollection } from 'astro:content';
import { formatContent } from '../../../utils/numsa';

const { textDirection } = I18N;

export const prerender = true;

export const getStaticPaths = (async () => {
    const posts = await getCollection('jc');
    return posts.map(post => ({
    params: { office: post.id }, props: { post },
  }));
}) satisfies GetStaticPaths;

type Props = {
  post: any;
}

const { post } = Astro.props as Props;

const image = (await findImage(post.data.image)) as ImageMetadata | string | undefined;

const metadata = merge(
  {
    title: post.data.position,
    description: post.data.name,
    robots: {
      index: blogPostRobots?.index,
      follow: blogPostRobots?.follow,
    },
    openGraph: {
      type: 'article',
      ...(image ? { images: [{ url: image, width: (image as ImageMetadata)?.width, height: (image as ImageMetadata)?.height }] } : {}),
    },
  },
) as MetaData;

// Format the post for ContentDetail component
const formattedPost = formatContent([post], 'jc')[0];
---

<Layout metadata={metadata}>
  <ContentDetail item={formattedPost} contentType="jc" />
  <div class="mx-auto px-3 sm:px-2 max-w-3xl pt-2 md:pt-4 pb-2 md:pb-3">
    <Button variant="tertiary" class="px-3 md:px-3" href={'/2024/jc'}>
      {
        textDirection === 'rtl' ? (
          <Icon name="tabler:chevron-right" class="w-5 h-5 mr-1 -ml-1.5 rtl:-mr-1.5 rtl:ml-1" />
        ) : (
          <Icon name="tabler:chevron-left" class="w-5 h-5 mr-1 -ml-1.5 rtl:-mr-1.5 rtl:ml-1" />
        )
      } Back to COMMITTEE
    </Button>
  </div>

</Layout>
